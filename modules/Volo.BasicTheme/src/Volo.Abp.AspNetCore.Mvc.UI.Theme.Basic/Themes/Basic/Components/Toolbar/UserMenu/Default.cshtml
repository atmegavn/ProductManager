@using Localization.Resources.AbpUi
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.MultiTenancy
@using Volo.Abp.UI.Navigation
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@inject ICurrentTenant CurrentTenant
@inject IHtmlLocalizer<AbpUiResource> L
@model ApplicationMenu

<li class="dropdown notification-list">
    <a class="nav-link dropdown-toggle nav-user arrow-none me-0" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="false"
       aria-expanded="false">
        <span class="account-user-avatar">
            <img src="~/themes/hyper/saas/assets/images/users/avatar-1.jpg" alt="user-image" class="rounded-circle">
        </span>
        <span>
            <span class="account-user-name">@CurrentUser.SurName @CurrentUser.Name </span>
            <span class="account-position">@CurrentUser.Roles.FirstOrDefault()?.ToString()</span>
        </span>
    </a>
    <div class="dropdown-menu dropdown-menu-end dropdown-menu-animated topbar-dropdown-menu profile-dropdown">
        <div class=" dropdown-header noti-title">
            <h6 class="text-overflow m-0">Welcome !</h6>
        </div>
        <!-- item-->
        <a href="/Account/Manage" class="dropdown-item notify-item">
            <i class="mdi mdi-account-edit me-1"></i>
            <span>Settings</span>
        </a>
        <!-- item-->
        <a href="/Account/Logout" class="dropdown-item notify-item">
            <i class="mdi mdi-logout me-1"></i>
            <span>Logout</span>
        </a>
        @if (Model.Items.Any())
        {
            <div class="dropdown-menu dropdown-menu-end border-0 shadow-sm" aria-labelledby="dropdownMenuLink">
                <!-- item-->
                <div class=" dropdown-header noti-title">
                    <h6 class="text-overflow m-0">Welcome !</h6>
                </div>
                @foreach (var menuItem in Model.Items)
                {
                    var elementId = string.IsNullOrEmpty(menuItem.ElementId) ? string.Empty : $"id=\"{menuItem.ElementId}\"";
                    var cssClass = string.IsNullOrEmpty(menuItem.CssClass) ? string.Empty : menuItem.CssClass;
                    var disabled = menuItem.IsDisabled ? "disabled" : string.Empty;
                    var url = string.IsNullOrEmpty(menuItem.Url) ? "#" : Url.Content(menuItem.Url);
                    <!-- item-->
                    <a href="@url" class="dropdown-item notify-item @cssClass @disabled" target="@menuItem.Target" @Html.Raw(elementId)>
                        <i class="@menuItem.Icon me-1"></i>
                        <span>@menuItem.DisplayName</span>
                    </a>
                }
            </div>
        }
       
    </div>
</li>
